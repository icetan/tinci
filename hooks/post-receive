#!/bin/bash
TINCIV=2.1.1

while read OLDSHA NEWSHA REF ; do

[ "$NEWSHA" = "0000000000000000000000000000000000000000" ] && continue

for SECTION in $(git config -l | grep -o '^tinci\(\.[^=]*\)*\.' | sed 's/\.$//' | uniq) ; do

MATCH="$(git config --get $SECTION.match)"

SHORTREF=$(echo "$REF" | grep -o "[^/]*$")
echo "$SHORTREF" | grep -qE "^($MATCH)$" || continue
INPUT="$OLDSHA $NEWSHA $REF"

HOOK="hooks/$SECTION"
CMD="$(git config --get $SECTION.runner)"
if [ "$CMD" ]; then
  SUCCESS="$HOOK-success"
  FAIL="$HOOK-fail"
  WORK=.tinci
  mkdir -p "$WORK"
  PLOGFILE=$(ls -1t $WORK/*.log 2>/dev/null | head -n1)
  PSTAT=$(tail -n1 "$PLOGFILE" 2>/dev/null | sed -nE 's/^# code ([0-9]+)$/\1/p')
  [ ! "$PSTAT" ] && PSTAT=0
  DIR=$WORK/job.$(od -A n -t d -N 2 /dev/urandom | tr -d ' ')
  mkdir -p "$DIR"
  git archive "$NEWSHA" | tar -x -C "$DIR"
  cd "$DIR"
  LOGFILE="../$NEWSHA.log"
  echo -e "# tinci $TINCIV\n# ref $REF\n# running $CMD" | tee "$LOGFILE"
  { eval "$CMD" 2>&1; echo "# code $?"; } | tee -a "$LOGFILE"
  STAT=$(tail -n1 "$LOGFILE" | sed -nE 's/^# code ([0-9]+)$/\1/p')
  cd ../..
  if [ $STAT -eq 0 ];then
    [ $PSTAT -eq 0 ] && echo -e "\nJob successful!" || echo -e "\nJob fixed!"
    [ -f "$SUCCESS" ] && \
      echo $INPUT | exec "$SUCCESS" "$DIR" "$STAT" "$PSTAT" 2>&1
  else
    [ $PSTAT -eq 0 ] && echo -e >&2 "\nJob failed!" || echo -e >&2 "\nJob is still failing!"
    [ -f "$FAIL" ] && \
      echo $INPUT | exec "$FAIL" "$DIR" "$STAT" "$PSTAT" 2>&1
  fi
fi
[ -f "$HOOK" ] && \
  echo $INPUT | exec "$HOOK" "$DIR" $STAT $PSTAT 2>&1
rm -rf "$DIR"
break

done

done
