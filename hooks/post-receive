#!/bin/bash
TINCIV=3.1.0

while read OLDSHA NEWSHA REF ; do

[ "$NEWSHA" = "0000000000000000000000000000000000000000" ] && continue

WORK=.tinci
THOOK="hooks/tinci"
TPREHOOK="hooks/tinci-pre"
TSTAT=0
INPUT="$OLDSHA $NEWSHA $REF"
SHORTREF=$(echo "$REF" | grep -o "[^/]*$")

[ -f "$TPREHOOK" ] && echo $INPUT | exec "$TPREHOOK" 2>&1

SECTIONS="$(git config -l | grep -o '^tinci\(\.[^=]*\)*\.' | sed 's/\.$//' | uniq)"
for SECTION in $SECTIONS ; do

MATCH="$(git config --get $SECTION.match)"
echo "$SHORTREF" | grep -qE "^($MATCH)$" || continue

SNAME="$(echo "$SECTION" | sed 's/^tinci$/main/;s/^tinci\.//')"
HOOK="$THOOK.$SNAME"
PREHOOK="$TPREHOOK.$SNAME"
CMD="$(git config --get $SECTION.runner)"

if [ "$CMD" ]; then
  mkdir -p "$WORK"
  PLOGFILE=$(ls -1t $WORK/$SNAME.*.log 2>/dev/null | head -n1)
  PSTAT=$(tail -n1 "$PLOGFILE" 2>/dev/null | sed -nE 's/^# code ([0-9]+)$/\1/p')
  [ ! "$PSTAT" ] && PSTAT=0
  DIR=$WORK/job.$(od -A n -t d -N 2 /dev/urandom | tr -d ' ')
  mkdir -p "$DIR"
  [ -f "$PREHOOK" ] && echo $INPUT | exec "$PREHOOK" "$PSTAT" 2>&1
  git archive "$NEWSHA" | tar -x -C "$DIR"
  cd "$DIR"
  LOGFILE="../$SNAME.$NEWSHA.log"
  echo -e "# tinci $TINCIV\n# ref $REF\n# running $CMD" | tee "$LOGFILE"
  { eval "$CMD" 2>&1; echo "# code $?"; } | tee -a "$LOGFILE"
  STAT=$(tail -n1 "$LOGFILE" | sed -nE 's/^# code ([0-9]+)$/\1/p')
  cd ../..
  if [ $STAT -eq 0 ];then
    [ $PSTAT -eq 0 ] && echo -e "\nJob successful!" || echo -e "\nJob fixed!"
  else
    ((TSTAT+=STAT))
    [ $PSTAT -eq 0 ] && echo -e >&2 "\nJob failed!" || echo -e >&2 "\nJob is still failing!"
  fi
  [ -f "$HOOK" ] && \
    echo $INPUT | exec "$HOOK" "$STAT" "$PSTAT" 2>&1
fi
rm -rf "$DIR"

done

[ -f "$THOOK" ] && \
  echo $INPUT | exec "$THOOK" "$TSTAT" 2>&1

done
