#!/bin/sh
TINCIV=1.3.0

MATCH=$(git config --get tinci.match)
[ -n "$MATCH" ] || MATCH=$(git config --get tinci.branch)
[ -n "$MATCH" ] || MATCH=master

while read OLDSHA NEWSHA REF ; do

[ "$NEWSHA" = "0000000000000000000000000000000000000000" ] && continue
SHORTREF=$(echo "$REF" | grep -o "[^/]*$")
echo "$SHORTREF" | grep -qE "^($MATCH)$" || continue
INPUT="$OLDSHA $NEWSHA $REF"

CMD=$(git config --get tinci.runner)
SUCCESS=hooks/tinci-success
FAIL=hooks/tinci-fail
HOOK=hooks/tinci
WORK=.tinci
mkdir -p $WORK
PLOGFILE=$(ls -1t $WORK/*.log 2>/dev/null | head -n1)
PSTAT=$(tail -n1 "$PLOGFILE" 2>/dev/null | sed -nE 's/^# code ([0-9]+)$/\1/p')
[ -n "$PSTAT" ] || PSTAT=0
DIR=$WORK/job.$(od -A n -t d -N 2 /dev/urandom | tr -d ' ')
mkdir -p $DIR
git archive "$NEWSHA" | tar -x -C "$DIR"
cd $DIR
LOGFILE=../$NEWSHA.log
echo "# tinci $TINCIV\n# ref $REF\n# running $CMD" | tee $LOGFILE
{ eval "$CMD" 2>&1; echo "# code $?"; } | tee -a $LOGFILE
STAT=$(tail -n1 $LOGFILE | sed -nE 's/^# code ([0-9]+)$/\1/p')
cd ../..
if [ $STAT -eq 0 ];then
  [ $PSTAT -eq 0 ] && echo "\nJob successful!" || echo "\nJob fixed!"
  [ -f "$SUCCESS" ] && \
    echo $INPUT | exec "$SUCCESS" "$DIR" "$STAT" "$PSTAT" 2>&1
else
  [ $PSTAT -eq 0 ] && echo >&2 "\nJob failed!" || echo >&2 "\nJob is still failing!"
  [ -f "$FAIL" ] && \
    echo $INPUT | exec "$FAIL" "$DIR" "$STAT" "$PSTAT" 2>&1
fi
[ -f "$HOOK" ] && \
  echo $INPUT | exec "$HOOK" "$DIR" "$STAT" "$PSTAT" 2>&1
[ -f "$HOOK-$SHORTREF" ] && \
  echo $INPUT | exec "$HOOK-$SHORTREF" "$DIR" "$STAT" "$PSTAT" 2>&1
rm -rf $DIR

done
