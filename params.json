{"name":"tinci","tagline":"TINy Continuous Integration script for use with GIT hooks","body":"tinci\r\n=====\r\n\r\n*TINy Continuous Integration script for use with Git hooks*\r\n\r\n![Screenshot of tinci GUI](https://raw.github.com/icetan/tinci/gh-pages/tinci-screenshot.png)\r\n\r\nFor the looks\r\n-------------\r\n\r\nYou can setup tinci for a bare Git repo and view the build logs over HTTP.\r\n\r\n```\r\n$ npm install -g tinci\r\n$ tinci my/project.git/\r\n$ open http://localhost:4567\r\n```\r\n\r\nInvoke a fetch and build with WebHooks by doing a HTTP POST\r\nto ```http://localhost:4567?invoke```. More on [WebHooks and integration with\r\nGitHub](https://help.github.com/articles/post-receive-hooks).\r\n\r\n\r\nJust the hooks\r\n--------------\r\n\r\nIf you don't want the GUI then you can just copy the hook script to your Git\r\nrepo manualy.\r\n\r\n```\r\n$ cp tinci/hooks/post-receive project.git/hooks/\r\n$ git config -f project.git/config --add tinci.runner \"make test\"\r\n```\r\n\r\ntinci will now run the shell command 'make test' each time someone pushes to\r\nyour repos master branch.\r\n\r\nTo run tinci on another branch or tag.\r\n\r\n```\r\n$ git config -f project.git/config --add tinci.match my-feature\r\n```\r\n\r\nThe `tinci.match` setting uses regexp so you can specify tinci to run on all\r\npushes by giving the value `.*`.\r\n\r\ntinci will execute its own hooks on completion of a job. Place executable files\r\nin your repos `hooks` directory with the name `tinci`, `tinci-<branch>`,\r\n`tinci-success` or `tinci-fail`.\r\n\r\nEach hook script will be called with the following arguments:\r\n\r\n1. path to work directory\r\n1. current job's exit code\r\n1. last job's exit code\r\n\r\nThe `tinci` and `tinci-<branch>` hooks will be called on all completed jobs.\r\n`tinci-success` is only called on a job that exits with a zero and `tinci-fail`\r\nwill only be called when a job exits with non-zero.\r\n\r\n`<branch>` in `tinci-<branch>` will be replaced with the current short ref name\r\nof the current job.\r\n\r\nExample: `git push origin master:deploy` till trigger a\r\ntinci job on the `deploy` branch on `origin` and will look for and execute a\r\nhook script with the name `tinci-deploy`.\r\n\r\nThese hooks are compatible with `post-receive`, in other words each script will\r\nbe called with the same `stdin` value as the `post-receive` was.\r\n\r\nHere is a sample [fail hook for sending\r\ne-mail](https://raw.github.com/icetan/tinci/master/hooks/tinci-fail.sample) and\r\na [hook which syncs files on `deploy` branch to Amazon\r\nS3](https://raw.github.com/icetan/tinci/master/hooks/tinci-deploy.sample).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}